name: yeogigallae CI/CD Workflow with Gradle

on:
  pull_request:
    branches:
      - main
      - dev
#  push:
#    branches:
#      - main   # main 머지 이후 운영 서버 배포

permissions:
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # Gradle 빌드 (테스트 제외)
      - name: Build with Gradle without tests
        run: ./gradlew clean bootJar -x test
        shell: bash

      - name: Create application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./application-prod.yml
        shell: bash

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/umc-server .

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/umc-server:latest

  CD:
    needs: CI      #  CI가 완료된 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/Back-End
            sudo docker-compose down
            if [ "$(sudo docker ps -qa)" ]; then
              sudo docker ps -qa | xargs -r sudo docker rm -f
            fi
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/umc-server:latest
            sudo docker-compose build --no-cache  
            sudo docker-compose up -d
            sudo docker image prune -f